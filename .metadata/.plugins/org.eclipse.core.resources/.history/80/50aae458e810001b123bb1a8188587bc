scchart DDD_pacemaker {
	
	input signal Vsense,Asense,AVI_ex,PVARP_ex,AEI_ex,VRP_ex,LRI_ex,stop_LRI,stop_AEI,URI_ex;
	output signal stop_URI,stop_VRP,stop_PVARP,stop_AVI,start_AVI,Vpace,start_PVARP,start_AEI,Apace,start_VRP,start_LRI,start_URI,LRI_stop;
	
	initial state TOP
	{		
	    	
	  		region AVI:
	  		
	  			initial state waitURIandAVI
	  			{
	  		
	  		  		region waitURI:
	  		  	
	  		  		initial state waitURI
	  		  		-->URIdone with URI_ex
	  		  		--> waitPVARP with AVI_ex;
	  		  	
	  		  		final state URIdone; 
	  		
	  		  		region waitAVI:
	  		  	
	  		  		initial state init
	  		  		-->connect with Asense
	  		  		-->connect with Apace;
	  		  	
	  		  		connector state connect
	  		  		-->waitAVI immediate with /start_AVI;
	  		  	
	  		  		state waitAVI
	  		  		--> waitPVARP immediate with AVI_ex
	  		  		--> waitPVARP immediate with Vsense/stop_AVI;
	  		  	
	  		  		final state waitPVARP
	  		  		-->init with PVARP_ex;

	  		  	
	  			}
	  			>-> waitPVARP with AVI_ex/Vpace
	  			>-> waitPVARP with Vsense/stop_URI
	  			>-> waitPVARP with /Vpace;
	  		
	  			state waitPVARP
	  			-->waitURIandAVI with PVARP_ex;
		  		
	  		
	  		region AEI:
	  		
	  			initial state idle
	  			--> connect with Vpace
	  			--> connect with Vsense;
	  			
	  			connector state connect
	  			--> waitPVARP immediate with /start_AEI ;
	  			
	  			state waitPVARP
	  			--> waitAEI with PVARP_ex;
	  			
	  			state waitAEI
	  			--> idle with Asense/stop_AEI
	  			--> idle with AEI_ex/Apace;
	  		
	  		region PVARP:
	  		
	  			initial state idle
	  			--> connect with Vsense
	  			--> connect with Vpace;
	  			
	  			connector state connect
	  			--> waitVRP immediate with /start_PVARP;
	  			
	  			state waitVRP
	  			--> waitPVARP with VRP_ex;
	  			
	  			state waitPVARP
	  			--> connect1 with Vsense
	  			--> connect1 with Vpace
	  			--> idle with PVARP_ex;
	  			
	  			connector state connect1
	  			--> connect immediate with /stop_PVARP;
	  			
	  		region VRP:
	  			
	  			initial state idle
	  			--> connect with Vsense
	  			--> connect with Vpace;
	  			
	  			connector state connect
	  			--> waitVRP immediate with /start_VRP;
	  			
	  			state waitVRP
	  			--> idle with VRP_ex;
	  		
	  		region LRI:
	  			
	  			initial state idle
	  			--> waitVRP with Vsense/start_LRI;
	  				
	  			state waitVRP
	  			--> waitLRI with VRP_ex;
	  			
	  			state waitLRI
	  			-->reinit with LRI_ex/Vpace
	  			-->reinit with Vsense/LRI_stop
	  			-->reinit with Vpace/LRI_stop;
	  			
	  			state reinit
	  			-->waitVRP with /start_LRI;
	  						
	  			
	  		region URI:
	  			
	  			initial state idle
	  			--> connect with Vsense
	  			--> connect with Vpace;
	  			
	  			connector state connect
	  			--> waitVRP immediate with /start_URI;
	  			
	  			state waitVRP
	  			--> waitURI with VRP_ex;
	  		
	  			
	  			state waitURI
	  			--> connect with Vsense/stop_URI
	  			--> reinit immediate with URI_ex;
	  			
	  			state reinit
	  			-->connect immediate with Vpace/start_URI;
	};

}
